import { ElementRef, Renderer } from '@angular/core';
import { NgControl } from '@angular/forms';
import { App } from '../app/app';
import { PointerCoordinates } from '../../util/dom';
import { Config } from '../../config/config';
import { Content } from '../content/content';
import { Form } from '../../util/form';
import { Ion } from '../ion';
import { Item } from '../item/item';
import { NativeInput, NextInput } from './native-input';
import { NavController } from '../../navigation/nav-controller';
import { NavControllerBase } from '../../navigation/nav-controller-base';
import { Platform } from '../../platform/platform';
export declare class InputBase extends Ion {
    protected _form: Form;
    protected _item: Item;
    protected _app: App;
    protected _platform: Platform;
    protected _scrollView: Content;
    _coord: PointerCoordinates;
    _deregScroll: Function;
    _disabled: boolean;
    _keyboardHeight: number;
    _scrollMove: EventListener;
    _type: string;
    _useAssist: boolean;
    _usePadding: boolean;
    _value: any;
    _isTouch: boolean;
    _autoFocusAssist: string;
    _autoComplete: string;
    _autoCorrect: string;
    _nav: NavControllerBase;
    _native: NativeInput;
    inputControl: NgControl;
    constructor(config: Config, _form: Form, _item: Item, _app: App, _platform: Platform, elementRef: ElementRef, renderer: Renderer, _scrollView: Content, nav: NavController, ngControl: NgControl);
    scrollMove(ev: UIEvent): void;
    setItemInputControlCss(): void;
    setControlCss(element: any, control: NgControl): void;
    setValue(val: any): void;
    setType(val: string): void;
    setDisabled(val: boolean): void;
    setNativeInput(nativeInput: NativeInput): void;
    setNextInput(nextInput: NextInput): void;
    writeValue(val: any): void;
    onChange(val: any): void;
    onTouched(val: any): void;
    hasFocus(): boolean;
    checkHasValue(inputValue: any): void;
    focusChange(inputHasFocus: boolean): void;
    pointerStart(ev: any): void;
    pointerEnd(ev: any): void;
    initFocus(): void;
    setFocus(): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    regScrollMove(): void;
    deregScrollMove(): void;
    focusNext(): void;
    static getScrollData(inputOffsetTop: number, inputOffsetHeight: number, scrollViewDimensions: any, keyboardHeight: number, plaformHeight: number): {
        scrollAmount: number;
        scrollTo: number;
        scrollPadding: number;
        inputSafeY: number;
    };
}
